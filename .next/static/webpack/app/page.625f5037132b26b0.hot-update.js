"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/use-toast.ts":
/*!****************************!*\
  !*** ./hooks/use-toast.ts ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toast: () => (/* binding */ toast),\n/* harmony export */   useToast: () => (/* binding */ useToast)\n/* harmony export */ });\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sonner */ \"(app-pages-browser)/./node_modules/sonner/dist/index.mjs\");\n\nconst toast = (options)=>{\n    const { title, description, variant = 'default', duration = 5000 } = options;\n    switch(variant){\n        case 'success':\n            sonner__WEBPACK_IMPORTED_MODULE_0__.toast.success(title, {\n                description,\n                duration\n            });\n            break;\n        case 'destructive':\n            sonner__WEBPACK_IMPORTED_MODULE_0__.toast.error(title, {\n                description,\n                duration\n            });\n            break;\n        case 'warning':\n            sonner__WEBPACK_IMPORTED_MODULE_0__.toast.warning(title, {\n                description,\n                duration\n            });\n            break;\n        case 'info':\n            sonner__WEBPACK_IMPORTED_MODULE_0__.toast.info(title, {\n                description,\n                duration\n            });\n            break;\n        default:\n            (0,sonner__WEBPACK_IMPORTED_MODULE_0__.toast)(title, {\n                description,\n                duration\n            });\n            break;\n    }\n};\nconst useToast = ()=>{\n    return {\n        toast\n    };\n};\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2tzL3VzZS10b2FzdC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEM7QUFTOUMsTUFBTUEsUUFBUSxDQUFDRTtJQUNiLE1BQU0sRUFBRUMsS0FBSyxFQUFFQyxXQUFXLEVBQUVDLFVBQVUsU0FBUyxFQUFFQyxXQUFXLElBQUksRUFBRSxHQUFHSjtJQUVyRSxPQUFRRztRQUNOLEtBQUs7WUFDSEoseUNBQVdBLENBQUNNLE9BQU8sQ0FBQ0osT0FBTztnQkFBRUM7Z0JBQWFFO1lBQVM7WUFDbkQ7UUFDRixLQUFLO1lBQ0hMLHlDQUFXQSxDQUFDTyxLQUFLLENBQUNMLE9BQU87Z0JBQUVDO2dCQUFhRTtZQUFTO1lBQ2pEO1FBQ0YsS0FBSztZQUNITCx5Q0FBV0EsQ0FBQ1EsT0FBTyxDQUFDTixPQUFPO2dCQUFFQztnQkFBYUU7WUFBUztZQUNuRDtRQUNGLEtBQUs7WUFDSEwseUNBQVdBLENBQUNTLElBQUksQ0FBQ1AsT0FBTztnQkFBRUM7Z0JBQWFFO1lBQVM7WUFDaEQ7UUFDRjtZQUNFTCw2Q0FBV0EsQ0FBQ0UsT0FBTztnQkFBRUM7Z0JBQWFFO1lBQVM7WUFDM0M7SUFDSjtBQUNGO0FBRUEsTUFBTUssV0FBVztJQUNmLE9BQU87UUFBRVg7SUFBTTtBQUNqQjtBQUUyQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxjaXJjdVxcRG93bmxvYWRzXFxzaXRlLXRheGFkc1xcaG9va3NcXHVzZS10b2FzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0b2FzdCBhcyBzb25uZXJUb2FzdCB9IGZyb20gJ3Nvbm5lcic7XG5cbnR5cGUgVG9hc3RPcHRpb25zID0ge1xuICB0aXRsZTogc3RyaW5nO1xuICBkZXNjcmlwdGlvbj86IHN0cmluZztcbiAgdmFyaWFudD86ICdkZWZhdWx0JyB8ICdkZXN0cnVjdGl2ZScgfCAnc3VjY2VzcycgfCAnd2FybmluZycgfCAnaW5mbyc7XG4gIGR1cmF0aW9uPzogbnVtYmVyO1xufTtcblxuY29uc3QgdG9hc3QgPSAob3B0aW9uczogVG9hc3RPcHRpb25zKSA9PiB7XG4gIGNvbnN0IHsgdGl0bGUsIGRlc2NyaXB0aW9uLCB2YXJpYW50ID0gJ2RlZmF1bHQnLCBkdXJhdGlvbiA9IDUwMDAgfSA9IG9wdGlvbnM7XG5cbiAgc3dpdGNoICh2YXJpYW50KSB7XG4gICAgY2FzZSAnc3VjY2Vzcyc6XG4gICAgICBzb25uZXJUb2FzdC5zdWNjZXNzKHRpdGxlLCB7IGRlc2NyaXB0aW9uLCBkdXJhdGlvbiB9KTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ2Rlc3RydWN0aXZlJzpcbiAgICAgIHNvbm5lclRvYXN0LmVycm9yKHRpdGxlLCB7IGRlc2NyaXB0aW9uLCBkdXJhdGlvbiB9KTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3dhcm5pbmcnOlxuICAgICAgc29ubmVyVG9hc3Qud2FybmluZyh0aXRsZSwgeyBkZXNjcmlwdGlvbiwgZHVyYXRpb24gfSk7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdpbmZvJzpcbiAgICAgIHNvbm5lclRvYXN0LmluZm8odGl0bGUsIHsgZGVzY3JpcHRpb24sIGR1cmF0aW9uIH0pO1xuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIHNvbm5lclRvYXN0KHRpdGxlLCB7IGRlc2NyaXB0aW9uLCBkdXJhdGlvbiB9KTtcbiAgICAgIGJyZWFrO1xuICB9XG59O1xuXG5jb25zdCB1c2VUb2FzdCA9ICgpID0+IHtcbiAgcmV0dXJuIHsgdG9hc3QgfTtcbn07XG5cbmV4cG9ydCB7IHVzZVRvYXN0LCB0b2FzdCB9O1xuIl0sIm5hbWVzIjpbInRvYXN0Iiwic29ubmVyVG9hc3QiLCJvcHRpb25zIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsInZhcmlhbnQiLCJkdXJhdGlvbiIsInN1Y2Nlc3MiLCJlcnJvciIsIndhcm5pbmciLCJpbmZvIiwidXNlVG9hc3QiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/use-toast.ts\n"));

/***/ })

});